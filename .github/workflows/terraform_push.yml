name: Deployment

on:
  workflow_dispatch:

#on:
 # push:
  #  branches: 
   #   - develop
    #  - test
     # - prelive
      #- main
    #paths:
     # - '.github/workflows/iac_pull.yml'
      #- 'scripts/iac-*'
      #- 'scripts/tf-*'
      #- 'iac-scripts/**'

permissions:
  id-token: write
  contents: read

jobs:
  terraform-plan-apply:
    name: Terraform Plan & Apply
    runs-on: ubuntu-24.04
    concurrency:
      group: "${{ github.repository}}-${{ github.ref_name }}"
    environment: ECP-${{ (github.ref_name == 'main' && 'PRD') || (github.ref_name == 'prelive' && 'PRL') || (github.ref_name == 'test' && 'TST') || (github.ref_name == 'develop' && 'DEV')}}
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.XXXXXXXX }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: eu-west-1
      
      - name: Prepare Terraform Environment Config Files
        shell: bash
        run: ./scripts/tf-prepare-environment.sh ECP-${{ (github.ref_name == 'main' && 'PRD') || (github.ref_name == 'prelive' && 'PRL') || (github.ref_name == 'test' && 'TST') || (github.ref_name == 'develop' && 'DEV')}}

      - name: Initialise Terraform
        id: init
        run: terraform init -backend-config=backend.conf -input=false
        shell: bash
        working-directory: "./iac-scripts/terraform"
        
      - name: Terraform Plan
        run: terraform plan -out "planfile" -var-file="config.tfvars" -var-file="versions.tfvars.json" -no-color
        shell: bash
        working-directory: "./iac-scripts/terraform"

      - name: Terraform Apply
        run: terraform apply -input=false "planfile"
        shell: bash
        working-directory: "./iac-scripts/terraform"
